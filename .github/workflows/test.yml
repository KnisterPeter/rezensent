name: CI

on: [push]

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14.x
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - run: yarn install --immutable
      - run: yarn check

  unit-tests:
    runs-on: ubuntu-latest
    name: unit tests
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14.x
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - run: yarn install --immutable
      - run: yarn test '\.test.ts'

  setup-integration-tests:
    runs-on: ubuntu-latest
    outputs:
      tests: ${{ steps.prepare.outputs.tests }}
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14.x
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - run: yarn install --immutable
      - id: prepare
        run: echo "::set-output name=tests::$(yarn jest --listTests --json '\.itest.ts' |jq --compact-output '[.[] | split("/")[-1] | sub(".itest.ts"; "") | . ]')"

  integration-tests:
    runs-on: ubuntu-latest
    name: integration-test (${{ matrix.tests }})
    needs: [setup-integration-tests]
    strategy:
      matrix:
        tests: ${{ fromJson(needs.setup-integration-tests.outputs.tests) }}
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14.x
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - run: yarn install --immutable
      - run: yarn test ${{ matrix.tests }}.itest
        env:
          LOG_LEVEL: info
          SCHEDULE_TIMEOUT: -1
          APP_ID: ${{ secrets.APP_ID }}
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          WEBHOOK_SECRET: ${{ secrets.WEBHOOK_SECRET }}
          WEBHOOK_PROXY_URL: ${{ secrets.WEBHOOK_PROXY_URL }}
          USER_TOKEN: ${{ secrets.USER_TOKEN }}

  test-result:
    runs-on: ubuntu-latest
    name: test-result
    needs: [unit-tests, integration-tests]
    steps:
      - run: echo "unit test=${{ needs.unit-tests.result }} integration test=${{ needs.integration-tests.result }}"
